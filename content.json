{"meta":{"title":"Lunar's Blog","subtitle":"^w^?","description":"摸了","author":"LunaticPurRabi","url":"https://lunaticreisen.github.io","root":"/"},"pages":[{"title":"","date":"2024-01-12T13:18:22.839Z","updated":"2024-01-12T13:18:22.839Z","comments":true,"path":"categories/index.html","permalink":"https://lunaticreisen.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2024-01-10T20:37:47.624Z","updated":"2024-01-10T20:37:47.624Z","comments":false,"path":"404/index.html","permalink":"https://lunaticreisen.github.io/404/index.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2024-01-10T20:26:53.078Z","updated":"2024-01-10T20:26:53.078Z","comments":true,"path":"tags/index.html","permalink":"https://lunaticreisen.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2024-01-14T09:46:15.589Z","updated":"2024-01-14T09:46:15.589Z","comments":true,"path":"about/index.html","permalink":"https://lunaticreisen.github.io/about/index.html","excerpt":"","text":"关于我会点Blender,会点C#,会点Photoshop会用illustrator,会用Designer是个超级脚本小子 twitter或者XEmail 算了我懒得写了，反正我页面隐藏了你也看不到，除非你专门过来看😉"},{"title":"我的朋友们","date":"2024-01-10T20:30:27.855Z","updated":"2024-01-10T20:30:27.855Z","comments":true,"path":"friends/index.html","permalink":"https://lunaticreisen.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"}],"posts":[{"title":"Func_Godot Vol.2 FGD and Entity","slug":"func-godot-vol-2","date":"2024-11-29T07:30:19.000Z","updated":"2024-11-30T09:06:50.705Z","comments":true,"path":"2024/11/29/func-godot-vol-2/","link":"","permalink":"https://lunaticreisen.github.io/2024/11/29/func-godot-vol-2/","excerpt":"配置并使用FGD","text":"配置并使用FGD FGD文件是什么FGD: Forge Game Data ,这里引用VDC的一段描述 FGD&nbsp;(Forge Game Data) is a plain-text file format used to define all of the&nbsp;entities&nbsp;of a game for a map editor, allowing mappers can select them from within the editor and configure their properties. FGD&nbsp;代表&nbsp;Forge&nbsp;Game&nbsp;Data。它是&nbsp;Hammer(en)&nbsp;游戏定义文件的文件扩展名。它们定义了游戏的所有实体，因此地图作者可以从编辑器中选择它们。 简而言之，FGD是用来告诉地图编辑器(TrenchBroom)，我们的游戏里面有什么实体，然后可以在地图编辑器内选择并放到我们的地图内 FGD资源文件 当你在项目中添加一个fgd资源时，你会看到好些带FGD的文件可以创建，我们只需要以下四种： FuncGodotFGDBaseClass 是特殊继承类，用来定义属性 FuncGodotFGDSolidClass 用于创建笔刷*(Brush)*实体，比如trigger , 梯子、水所需要的trigger，还有一些无碰撞的brush FGD SolidClass entity definition, used to define brush entities. A&nbsp;MeshInstance3D&nbsp;will be generated by&nbsp;FuncGodotMap&nbsp;according to this definition’s Visual Build settings. If FuncGodotFGDSolidClass&nbsp;Node Class&nbsp;inherits&nbsp;CollisionObject3D&nbsp;then one or more&nbsp;CollisionShape3D&nbsp;nodes will be generated according to Collision Build settings. FGD SolidClass 实体定义，用于定义画刷实体。FuncGodotMap 会根据此定义的 Visual Build (一个选项) 设置生成一个 MeshInstance3D。如果 FuncGodotFGDSolidClass节点类 继承自 CollisionObject3D，则会根据 Collision Build 设置生成一个或多个 CollisionShape3D 节点。 FuncGodotFGDPointClass 用来定义点实体，详见点实体 - Valve Developer Community。 以我个人的理解，是用来在地图编辑器内放置环境实体、道具模型(*Props)*实体、和NPC实体 FuncGodotFGDModelPointClass 一种特殊类型的FuncGodotFGDPointClass ,引用Docs的机翻 可以自动生成 一个特殊的简化、缩放和重新定位的 GLB 模型文件，用于地图编辑器显示 以我个人的理解，应该是单纯用于放置道具*(Props)*实体的特殊优化版本 FuncGodotFGDBaseClass基类，用来定义基础FGD属性 FuncGodotFGDEntityClass Entity Definition Classname:在地图编辑器内显示的名字 Description:此类的描述 Func Godot Internal: 勾选会导致不导出到FGD，仅用于Func_Godot的地图构建过程 Base Classes : 要继承的基类，这里是要填入别的FGDBaseClass Class Properties : 此类的属性，会显示到地图编辑器内，同时会将编辑后的属性添加到Func_Godot生成的节点内 如何使用：先点击新建键右边的那个笔新建一个String填入名字，然后再点击新建值右边的笔新建你想要的变量(详见:Func_Godot Docs)，只有在以上填好了填正确了再去点击添加键值对，不然不会添加到字典内！ Class Property Descriptions: 此类属性的描述，填写方法如上 Meta Properties: 此类在地图编辑器的外观属性(size,color,model等) Node Generation 在基类中不必填写，但是为了方便查阅起见我会写在此处 Node Class: Func_Godot要生成的节点，例如填入Area3D会生成Area3D而不是普通的CollisionShape3D or Node3D Name Property: 疑似是名字，原文： Optional. Specifies a class property belonging to this entity that will be used to name the generated node upon map build. The node is renamed to&nbsp;prior to being added to the&nbsp;SceneTree&nbsp;and applying&nbsp;.Overrides the&nbsp;Entity Name Property&nbsp;setting in&nbsp;FuncGodotMapSettings.NOTE: Node names should be unique, otherwise you may run into unexpected behavior! 1\"entity\" + name_property Notion翻译: 可选。指定属于此实体的一个类属性，该属性将用于在地图构建时命名生成的节点。节点会在被添加到SceneTree之前重命名，并应用。这会覆盖FuncGodotMapSettings中的Entity Name Property设置。 注意：节点名称应该是唯一的，否则您可能会遇到意外行为！ 节点将被重命名为：”entity” + name_property 一般情况下只需要复制黏贴example内的base fgd就可以使用了，有特殊需求的基类自己重新写一个即可 详情写法请参考func_godot官方的example repo https://github.com/func-godot/func_godot_example_basic FuncGodotFGDSolidClass用于创建笔刷 (Brush) 实体 FuncGodotFGDSolidClass Spawn Type : 一般来说默认Entity即可，详情请看docs Original Type : 该选项仅在SpawnType为Entity时有效，一般来说默认即可 Visual Build Build Visuals : 是否生成视觉网格(MeshInstance3D) Use in Baked Light ： 将生成的 MeshInstance3D 设置为可用于 FuncGodotMap 构建后的 UV2 展开。用于烘焙光照贴图。 Sets generated MeshInstance3D to be available for UV2 unwrapping after FuncGodotMap build. Utilized in baked lightmapping. Shadow Casting Settings : 投射阴影设置 Build Occlusion : 是否生成用于遮挡剔除的OccluderInstance3D(具体请看Godot Docs) Render Layers : 渲染层调整 Collision Build Collision Shape Type: 可选为 None(无) 不构建碰撞体 Convex(凸面) MeshInstance3D会构建ConvexCollisionShape3D,非StaitcBody3D节点必须选择此项目(如Area3D及RigidBody3D) Concave(凹面) MeshInstance3D会构建ConcaveCollisionShape3D,会跳过处理用了Skip材质的面 建议以实际游戏需要为准去选择 Collison Layer : 碰撞层 Collision Mask : 碰撞遮罩 Collision Priority : 碰撞优先级 Collision Shape Margin : 碰撞边距 Scripting Script Class : 脚本,具体请参照example，文章/视频后面会有演示(也许可以单独分开几个视频？) FuncGodot FGD Point Class用来定义点实体，用于在地图编辑器内放置环境实体、道具模型(*Props)*实体、和NPC实体。 FuncGodotFGDPointClass Scene Scene File : 你的场景 Scripting Script Class : 脚本文件 Build Apply Rotation on Map Build : 当地图编译时是否要引应用旋转 FuncGodot FGD Model Point Class FuncGodotFGDModelPointClass Target Map Editor : 目标地图编辑器，如使用trenchbroom,请选择trenchbroom Modifies whether the entity definition uses the&nbsp;or&nbsp;keyword, and how it applies display model scaling. Options are&nbsp;GENERIC&nbsp;or&nbsp;TRENCHBROOM. 修改实体定义是否使用 “or” 关键字，以及如何应用显示模型缩放。选项为Generic或TRENCHBROOM Model Sub Folder : 可选，如填写则模型会相对于FuncGodotLocalConfig中设置的Game Path Models Folder的位置额外创建文件夹并导出在其中(待验证，因为忘了哈哈) Scale Expression : 仅限TrenchBroom，应用于模型的缩放表达式，详情请见&nbsp;TrenchBroom 文档。如果要为其他地图编辑器设置，请设置FuncGodotLocalConfig中的Default Inverse Scale Generate Size Property : 通过网格的aabb自动生成覆盖Meta属性内的size项目。正确生成需要将Scale Expression设置为float 或Vector3 Generate gdignore File : 在模型导出的文件夹内生成 dot gdignore文件，以用来防止Godot导入模型，一般情况下只需要设置一次(但是多点基础无所谓的) 在正式创建一个FGD前…https://github.com/func-godot/func_godot_example_basic 个人建议将func_godot官方的example内的fgd、他们的脚本文件，以及GameManager.gd复制黏贴到你的项目之后( 注意:在黏贴前请关闭你的项目，否则会报错且无法修复缺失文件 )，在进行接下来的操作 理由是：官方example内已经有基础的fgd(trigger以及灯光摄像机)可以OOTB了，不需要重复造轮子 黏贴好后请把GameManager.gd挂到自动加载上(项目→全局→自动加载)；然后打开那些fgd，修复缺失文件，一般来说直接会自动识别，点以下确定就完成了 做完上述步骤后，我来做几个example来演示一下怎么做 示范以及使用接下来我们写一个没有脚本的模型fgd以及一个有脚本的触发器fgd,他的作用是”在玩家碰到后会在后台输出’hello,world‘ “ 我们先来做第一个，也就是单纯的模型FGD： 示例模型FGD处理模型: 首先我们先找一个喜欢的模型将他导入到godot内，然后创建一个新场景，将模型拖进3D视图内 然后点击”在编辑器中打开”，会弹出以下窗口，我们点击”仍然打开“ 打开后，请将模型正面旋转到和-z方向对齐，这样做是为了在tb中的模型的方向也是面相前方，然后看你个人喜好修改一下模型的节点。完成后我们按ctrl+shift+s另存为一个dot tscn文件 创建FGD: 在你分类好的fgd资源文件夹 或 没分类好的文件夹 内， 新建一个FuncGodotFGDModelPointClass ，命名不建议非常随意（为了项目管理和以后的你自己着想），我这边命名为”prop_turtle”（既”道具_乌龟”） 编写FGD: 我们直接把上面的tscn文件拖进Scene → scene file内，然后打开Build → Apply rotation on map的选项，顺便把Target Map Editor 选为 TrenchBroom。 然后打开Entity Definition，ClassName请填入你的文件名字（为了方便管理），Description可写可不写。 来到下面的Meta Properties, 根据模型实际大小设置size数值 根据我的摸索,xyz都是负数，whd都是正数 xy和wh只要填写一样的数字，且xy、wh互为相反数即可保持在模型中央位置 而z和d 的话，z 是控制模型垂直以上方向，d是控制模型垂直以下的方向 默认1 hammer单位= 0.03125 godot单位，也就是说16hammer单位=0.5Godot单位 例如我这边的小乌龟模型是1m，也就是32hammer单位，所以我这边是填写成: {-16 ， -16 ， 32， 16 ， 16 ， 0 } 填好后直接ctrl+s保存即可，然后我们继续下一个 如果你想直接测试请跳转到下一章节 触发器FGD创建FGD: 在你分类好的fgd资源文件夹 或 没分类好的文件夹 内， 新建一个FuncGodotFGDSolidClass,我这边命名为trigger_test 编写FGD: 在Func_Godot 2024.2版本中，Origin Type 默认变成了 Bounds Center , 我个人建议改成以前的 Averaged(预防不测) 由于我们只是做一个测试用的触发器，所以可以不动Visual Build的选项，以方便调试 然后来到下面的FuncGodotFGDEntityClass我们填写Classname、Description，然后在Node Class内填入 Area3D 最后我们在上面的Scripting → Script Class内添加一个新的脚本 他这个插件添加脚本是默认生成一个空的文本，然后在Script页面对这个空文本编辑。但由于我使用的是外置编辑器去编辑脚本，所以是需要先在项目内添加脚本，然后再把脚本拖入Script Class的框里面才能正常在外置编辑器内编辑 1234567891011121314#必须给脚本带上@tool属性@tool#建议类名和文件名相对应class_name TriggerTest#填写你在*Node Class*填写的内容extends Area3Dfunc _init(): #连接到Area3D的\"body_entered\"信号 connect(\"body_entered\" , _on_ent_entered)func _on_ent_entered(ent: Node) -&gt; void: print(\"Hello,world!\") 然后保存即可 使用做完以上两项(或一项)后，你得到了两个fgd文件 我们先找到 ~\\addons\\func_godot\\fgd*func_godot_fgd.tres，然后我们打开你从 exmaple项目 黏贴来的fgd_main.tres，将func_godot_fgd.tres拖入到Base Fgd Files*旁边的Array[Rsourece]那个选框里，并将其排序到第一位(如图)。别忘了改FGD名字! 然后我们打开fgd_main.tres同目录下的fgd_point.tres和fgd_solid.tres，分别将你刚刚写的模型fgd和触发器fgd 分别 拖入到他们的 Entity Definitions 内(不需要排序) 完成后将 你修改过的fgd_main.tres 拖入到 第一节创建的 func_godot_default_map_settings 文件内的 Entity Fgd，将其替换；然后打开你的 TrenchbroomGameConfig, 将你的 fgd_main.tres 也拖入拖入到 Entites→ FGD File内。 接下来打开 res://addons/func_godot/game_config/trenchbroom/，将里面的tb_brush_tag_func.tres和tb_brush_tag_trigger.tres拖入到Tags→Brush Tags内，没有这个笔刷标签，你的trigger实体无法正常使用。完成后 点击 Export File 即可 然后打开trenchbroom和你的地图，验证是否报错，如有请自行排查，或者实在找不到问题所在可以私信我。如果没有问题的话，你应该会在trenchbroom右边看到你所创建的模型实体；对着一个brush右键应该也能看到你的碰撞体实体。（图为示例） 拉完box后保存，回到Godot内点击编译后运行，如果没什么岔子，那应该能看到你的模型、走入trigger后能在内debug terminal中看到”hello,world!”，那就恭喜你！完成了这一节的教程 你已经很牛逼了，快去做个复杂fgd实体把！ Extra指向性Brush实体Brush实体默认不带指向性，如有需要，可以尝试在需要的实体fgd的 Class Properties 内添加一个 键为 angle 值为 int or float 的类，重新编译后即可使用 但是就算是你有了这个键值，func_godot编译时也不会实际让这个物体的旋转变成这个值，他只会简单粗暴创建一个应用变换后的物体，要使用的话得在脚本内填入以下代码后才能获取你在trenchbroom修改的数值： 12345#在@tools下面@export var angle : floatfunc _func_godot_apply_properties(props: Dictionary) -&gt; void: angle = props[\"angle\"] as float 如果没有什么问题，那么在你重新编译后，会在所在node的属性内看到多出来一个angle的键值，上面写着你的旋转属性，接下来就可以在代码内将他的子物体旋转了 Choices &amp; Bit Flags如果需要在tb内下拉选择(Choices)或者多选额外属性(Bit Flags)，请查看Docs FuncGodot Manual 简单来说，下拉选择就是在Class Properties 内创建字典，键和值固定为String和int；多选就是建立一个Array，然后在这个Array再建立一个Array，在这个Array内创建一个string和两个***int(*也就是一个为选项名字，另外两个为布尔值)，具体请看图 ChoicesBit Flags REFFuncGodot FGD File FuncGodot FGD Entity Class FuncGodot FGD Base Class FuncGodot FGD Solid Class FuncGodot FGD Point Class FuncGodot FGD Model Point Class","categories":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/categories/Godot/"}],"tags":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/tags/Godot/"},{"name":"dev","slug":"dev","permalink":"https://lunaticreisen.github.io/tags/dev/"}],"author":"Luna"},{"title":"Func_Godot Vol.1 Installation","slug":"func-godot-vol-1","date":"2024-11-29T07:30:13.000Z","updated":"2024-11-30T09:07:19.904Z","comments":true,"path":"2024/11/29/func-godot-vol-1/","link":"","permalink":"https://lunaticreisen.github.io/2024/11/29/func-godot-vol-1/","excerpt":"Func_Godot安装和配置","text":"Func_Godot安装和配置 Intro我发现godot自带的csg用来做地图实在是太不方便了，四处寻找了一番发现在godot内做地图的插件都很狗屎，迫于无奈只好选择了Func_Godot配套外置的地图编辑器。虽然因为没有资料和英语苦手导致折腾了好几天，但是我总算还是让他跑起来了。虽然特别折腾，但是折腾完后特别有意义，做地图方便太多了 csg作图不方便，插件csg太buggy，所以使用了func_godot Func_Godot是什么？ 在安装前，我先来简单介绍一下Func_Godot是什么。 Func_Godot的前身是Qodot,他是对于Qodot的一次大幅重写版本 这个插件的主要作用是允许你使用Quake的dot map文件去生成godot的地图场景。 请注意，严谨点说，Func_Godot不是地图编译器，他只是一个地图解释器，他没有Quake引擎的vis、lit的概念，更没有bsp的概念，他只是作为一个quake地图编辑器的桥接插件：把quake dot map的文件内容翻译成了Godot的节点，仅此而已 本教程使用是 Godot4.3 以及func_godot官方推荐的quake地图编辑器 Trenchbroom 当然你也可以选择其他的地图编辑器，如我们Goldsrc 之光 J.A.C.K 和 老牌Quake地图编辑器 NetRadiant，只不过这些地图编辑器的配置不在本文讨论范围内(因为我也不会(/ω＼)) 下载&amp;安装下载插件： GitHub - func-godot/func_godot_plugin: Quake .map support for Godot 4.2 请注意：目前该插件仅适用于Godot4.2+版本，Godot4.3据我所了解的情况下使用没有问题，不过请自行承担风险 该插件也有Godot3.x版本，只不过已停止维护，并且也不再本文讨论范围内，如有需要请自行查阅 地图编辑器 TrenchBroom https://github.com/TrenchBroom/TrenchBroom 截止到写稿的时间，tb的2024.2 pre-release已经出来了，但是在正式release出来前个人建议下载2024.1 latest tb下载完后选择一个喜欢的地方解压即可 安装 Func_godot下载完后压缩包内有两个文件夹 其中一个是插件本体(addons) 另外一个是离线版的 Documentation(FuncGodot Manual) 安装只需要将addons文件拖入 项目 根目录即可（即res://) 然后我们在godot内，左上角选择 项目 → 项目设置 → 插件，勾选 FuncGodot插件即可 配置插件func_godot_local_config我们在左下角文件系统内，进入 res://addons/func_godot，找到 func_godot_local_config.tres ,打开它，就会见到如下设置 在这里，我们只需要关注其中四个参数: 分别是 Fgd output Foloder : 你的fgd导出位置，一般情况下和tb的游戏配置文件目录相同即可 Trenchbroom Game Config Folder : tb的游戏配置文件目录，也就是tb目录下games文件夹，这里填写成:”trenchbroom位置/games/你的项目名字(or接下来设置的名字)”即可 Map Editor Game Path : 你的项目位置 Game Path Models Folder : 你的entity model在你项目的位置，在有model point fgd导出的时候,会自动生成一个glb的模型文件供你在tb内快速预览；而这个条目的意思就是，要在你项目位置的哪个文件夹里面创建，如留空为默认放置在项目根目录 例如：你填写models，那么他就会在res://models里面放置glb文件，关于godot会自动读取的问题，在设置model point fgd的时候有创建 dot gd ignore 文件的选项，这些东西以后会详细说明，不在本文的讨论范围内 好了，按照以上信息填好之后记得点一下最上面的Export Func Godot Settings，否则到时候可能会导致导出游戏配置文件失败 func_godot_default_map_settings在同样的位置(res://addons/func_godot)，打开 func_godot_default_map_settings.tres 如画面中所示，目前我们只是调试安装插件，我们只需要注意一个地方： Base Texture Dir 点击后面的文件夹选择你放置贴图与材质的地方，个人建议贴图和材质放在同一个目录下，且最好贴图和材质的名字相对应，因为这样会大大节省我们作图的时间，而不用去折腾材质之类的事情 然后记得在下面的 Texture File Extensions 里面添加一个元素:里面写上tres即可 (如果你使用的材质的后缀为material或者res，也可以添加上去，Func_Godot支持这种格式) 然后ctrl+s或点一下上面的保存键即可 TrenchbroomGameConfig接下来我们在你喜欢的地方创建一个 resource / 资源 文件，搜索TrenchbroomGameConfig，命名成你喜欢的名字，点击创建，然后会看到这么多选项： 如上，具体设置下一章节会提及。 在这里我们只需要注意两个选项： Game Name 建议设置成别的名字，特别是你有多个项目的情况下，不然很容易混淆 Export File 在设置完游戏名字后，并检查前面在func_godot_local_config.tres内填写的信息是否正确，检查完毕后点击一下并看到输出栏没有红字error即成功导出 使用 TrenchBroom配置 TrenchBroom在你导出完成后，打开trenchbroom 点击New map… 然后点击Open Preferences 在这里，选择你刚刚导出的项目名字，在右边的Game Path里面填入你的项目地址 完成后Apply 并保存后，在Select Game中选择你的项目，你便如字面意思上新建了一张地图 使用 TrenchBroom本文只会讲述一些简单的使用方法(如搓box)，详细请看dumptruck_ds大佬制作的系列视频 Quake Mapping: TrenchBroom 2 Quickstart(Youtube) 墙内翻译链接: Mapping雷神之锤：TrenchBroom 2快速入门_哔哩哔哩_bilibili 【Quake地图绘制 TrenchBroom 2 快速入门】 省流:在无模式选择下直接拉鼠标就能出Box,按住alt能调整box的高度；v顶点模式 ，e边模式， f面模式，esc退出模式，别的操作和3d建模软件差不多 设置纹理 在界面右边，点击右上角Face。在Texture Browser的右边打开Settings，如果设置无误你会看到你设置的材质目录与目录内的文件夹，双击他们或者选择后点击右下角的+号。完成后点击Browser即可看到你的材质。 还有一个小贴士， Clip贴图是给碰撞类型为 凸面 的物体，设置有碰撞体积、但没有视觉显示贴图的地方使用的；在func_godot的编译地图后，在tb内使用Clip贴图的面会没有贴图但保留碰撞体积。 而 Skip贴图是给 凹面 的物体，用来设置那些不需要的面上使用的；在func_godot的编译地图后，在tb内使用skip贴图的面会直接消失。 编译地图在你做完、测试瞎弄完后，在tb内ctrl+s保存地图后，返回godot内新建一个新的场景(命名随意)后，添加一个叫做 FuncGodotMap 的Node 然后在 文件系统 内找到你刚刚保存的地图，拖入到 FuncGodotMap 的 检查器 内的 Local Map File项中 随后在3D面板中，在已选择FuncGodotMap Node的情况下，点击中间视图上方的Build按钮，即可编译你刚刚做的完美地图，随后你便可以开始测试了 好了，恭喜你完成你的func_godot的基础设置与你的首个地图编译，现在你可以为你的游戏随意搓box了，congratulations！ 如果你不满于tb只能用来搓搓box，你想让tb去放置实体和划几个trigger box的话，请看下一篇文章~~ Fin.","categories":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/categories/Godot/"}],"tags":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/tags/Godot/"},{"name":"dev","slug":"dev","permalink":"https://lunaticreisen.github.io/tags/dev/"}],"author":"LunaR"},{"title":"CZ SHADOW 2","slug":"cz-shaodw-2","date":"2024-05-13T16:57:43.000Z","updated":"2024-05-13T17:52:40.965Z","comments":true,"path":"2024/05/14/cz-shaodw-2/","link":"","permalink":"https://lunaticreisen.github.io/2024/05/14/cz-shaodw-2/","excerpt":"THE MOST POPULAR FIREARMS FOR COMPETING IN THE IPSC PRODUCTION DIVISION","text":"THE MOST POPULAR FIREARMS FOR COMPETING IN THE IPSC PRODUCTION DIVISION – ⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠多图杀猫⚠ 为什么建这个模，其实也没啥就是手痒痒了，想看看我现在对于这个硬表面是这么个掌握情况。cz shadow2 compact，这把枪是我之前在半夜刷小视频看到的，酷炫的小外观着实抓住了我的心,至于为什么说的是compact，但我建的是原版呢，这就是因为我傻逼了… 这次下了点功夫，花了两天去布置这个场景和灯光（主要是灯光），虽然看起来还是挺糟糕的，但是至少我是有进步的 渲染图： wireframe： 是的，我没布线因为我懒，但是我就是想展示一下我是怎么做的（虽然不一定有人看） 晚点过段时间我可能会给在弄个低模烘焙上去，丢到我的小独游上，到时候再说吧，再见","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"},{"name":"Guns","slug":"Blender/Guns","permalink":"https://lunaticreisen.github.io/categories/Blender/Guns/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"Guns","slug":"Guns","permalink":"https://lunaticreisen.github.io/tags/Guns/"}],"author":"LunaR"},{"title":"Godot Source Movement with Surfing","slug":"godot-source-movement-with-surfing","date":"2024-04-07T12:10:05.000Z","updated":"2024-04-08T07:16:09.910Z","comments":true,"path":"2024/04/07/godot-source-movement-with-surfing/","link":"","permalink":"https://lunaticreisen.github.io/2024/04/07/godot-source-movement-with-surfing/","excerpt":"Updated","text":"Updated 项目链接：https://github.com/LunaticReisen/GodotSourceMovement 稍微说一下在Quake类引擎里面，滑翔是怎么实现的： 你在滑翔的时候，其实是属于空中移动，当你理解到这一点的时候你大概也明白这是怎么一回事了，没明白我继续展开说说： 先看这个链接，在Quake里，你能在空中加速而不能在地面加速是因为他们限制的是当前速度对加速度的投影，这也就是跳起来后ad左右晃鼠标能加速的缘由；继续说滑翔，因为当你在滑翔的时候你是在空中移动，且斜坡（在一定角度内）不算是地面，所以你就能按着墙面方向的移动键一直沿着墙面滑翔。 至于为什么有时候滑不起来，这其实是数据配置的问题（我被这个问题困扰了快一周）：当你的空中加速度不够的时候是会直接滑下去的；在够的情况下但最高空中速度过低的时候，也会因为需要在斜坡上滑一段距离导致滑不起来 学识不精，还有问题请在留言区反馈(￣▽￣) 花了快一个月的时间，把这个抽象滑翔整明白了，只能说我完全没想到godot这个cb3d会有让你一直在斜坡上滑下来的功能，这功能让我整整弄了快一个月 反正整完了，我该继续去做我的小独游了，嘻嘻 视频：https://x.com/514onkoishi/status/1776906802208104455 github-page downloadgithub releases download","categories":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/categories/Godot/"}],"tags":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/tags/Godot/"},{"name":"dev","slug":"dev","permalink":"https://lunaticreisen.github.io/tags/dev/"},{"name":"source","slug":"source","permalink":"https://lunaticreisen.github.io/tags/source/"}],"author":"Luna"},{"title":"NeoUniverse Lowpoly","slug":"neo-universe-lowpoly","date":"2024-03-09T08:17:05.000Z","updated":"2024-03-09T09:59:25.876Z","comments":true,"path":"2024/03/09/neo-universe-lowpoly/","link":"","permalink":"https://lunaticreisen.github.io/2024/03/09/neo-universe-lowpoly/","excerpt":"Low poly model","text":"Low poly model 这个模型早在一两年前就有做的想法了，但是一直在弄有的没的导致不记得去做，虽然最后呈现的效果没我想象中的好，但是也还不错了 制作时间也由于因为作息问题，做的时间比想象中的长，花了快一个月左右 模型文件等我某天突发奇想了再发出来吧，制作时间太长了，到后面就没有热情继续制作了，导致我其实权重没完全刷完（头发的权重一团糟😋）反正差不多得了，以后有想法了在做这些花哨玩意，接下来就是继续弄我的那个godot小项目了 Sketchfab : https://sketchfab.com/3d-models/neouniverse-9f6cf02989814e1f8b65bd835f7c1f62 X or Twitter : https://x.com/514onkoishi/status/1766048881283104798?s=20","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"},{"name":"Umamusume","slug":"Blender/Umamusume","permalink":"https://lunaticreisen.github.io/categories/Blender/Umamusume/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"}],"author":"Luna"},{"title":"Godot Source Movement","slug":"godot-source-movement","date":"2024-02-26T09:08:53.000Z","updated":"2024-02-26T10:04:37.378Z","comments":true,"path":"2024/02/26/godot-source-movement/","link":"","permalink":"https://lunaticreisen.github.io/2024/02/26/godot-source-movement/","excerpt":"Ported Unity code","text":"Ported Unity code 项目链接：https://github.com/LunaticReisen/GodotSourceMovement 目前只实现了BunnyHopping和蹲下这两个功能，且蹲下无法连跳(因为摩擦力的缘故，蹲下速度过小会导致无法移动；但是蹲下速度过大会导致和步行没有区别) 未来可能会加入surfing，但前提是godot能写得出来；以目前来说，godot过于自由的编写风格让我摸不着头脑，以及用不太明白的signal系统让我自己都不知道我在写什么东西 更多视频请查看我的Twitter，blog这边只是简单说一下我的想法 video: 连跳 Your browser does not support the video tag. 下蹲 Your browser does not support the video tag. 蹲跳 Your browser does not support the video tag.","categories":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/categories/Godot/"}],"tags":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/tags/Godot/"},{"name":"dev","slug":"dev","permalink":"https://lunaticreisen.github.io/tags/dev/"},{"name":"source","slug":"source","permalink":"https://lunaticreisen.github.io/tags/source/"}],"author":"Luna"},{"title":"Markdown testing","slug":"test-md","date":"2024-01-13T09:20:32.084Z","updated":"2024-01-14T09:37:02.384Z","comments":true,"path":"2024/01/13/test-md/","link":"","permalink":"https://lunaticreisen.github.io/2024/01/13/test-md/","excerpt":"Testing markdown in new theme.","text":"Testing markdown in new theme. This is intended as a quick reference and showcase. For more complete info, see John Gruber’s original spec and the Github-flavored Markdown info page. This cheatsheet is specifically Markdown Here’s version of Github-flavored Markdown. This differs slightly in styling and syntax from what Github uses, so what you see below might vary a little from what you get in a Markdown Here email, but it should be pretty close. Table of ContentsHeadersEmphasisListsLinksImagesCode and Syntax HighlightingBlockquotesInline HTMLHorizontal RuleLine Breaks ## Headers 1234567891011121314# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------ H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2 ## Emphasis 12345Emphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**. Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. ## Lists 1234567891011121. First ordered list item2. Another item * Unordered sub-list. 1. Actual numbers don't matter, just that it's a number 1. Ordered sub-list4. And another item. Some text that should be aligned with the above item.* Unordered list can use asterisks- Or minuses+ Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don’t matter, just that it’s a number Ordered sub-list And another item. Some text that should be aligned with the above item. Unordered list can use asterisks Or minuses Or pluses ## Links There are two ways to create links. 12345678910111213[I'm an inline-style link](https://www.google.com)[I'm a reference-style link][Arbitrary case-insensitive reference text][You can use numbers for reference-style link definitions][1]Or leave it empty and use the [link text itself][]Some text to show that the reference links can follow later.[arbitrary case-insensitive reference text]: https://www.mozilla.org[1]: http://slashdot.org[link text itself]: http://www.reddit.com I’m an inline-style link I’m a reference-style link You can use numbers for reference-style link definitions Or leave it empty and use the link text itself Some text to show that the reference links can follow later. ## Images 123456789Here's our logo (hover to see the title text):Inline-style: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")Reference-style: ![alt text][logo][logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\" Here’s our logo (hover to see the title text): Inline-style: Reference-style: ## Code and Syntax Highlighting Code blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page. 1Inline `code` has `back-ticks around` it. Inline code has back-ticks around it. Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting. 123```javascriptvar s = \"JavaScript syntax highlighting\";alert(s); 12s = \"Python syntax highlighting\"print s 12No language indicated, so no syntax highlighting. But let's throw in a &lt;b&gt;tag&lt;/b&gt;. 1234```javascriptvar s = \"JavaScript syntax highlighting\";alert(s); 12s = \"Python syntax highlighting\"print s 12No language indicated, so no syntax highlighting in Markdown Here (varies on Github). But let's throw in a &lt;b&gt;tag&lt;/b&gt;. (Github Wiki pages don’t seem to support syntax highlighting, so the above won’t be colourful (the strings are not red, for example). Try it out in a Markdown Here email or a Github Markdown README or Github Issue – you can preview a new Issue without submitting it.) Again, to see what languages are available for highlighting, and how to write those language names, see the highlight.js demo page. ## Blockquotes 123456&gt; Blockquotes are very handy in email to emulate reply text.&gt; This line is part of the same quote.Quote break.&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. Blockquotes are very handy in email to emulate reply text.This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. ## Inline HTML You can also use raw HTML in your Markdown, and it’ll mostly work pretty well. Here are a couple of common examples: 12345678910111213141516171819202122232425262728&lt;dl&gt; &lt;dt&gt;Definition list&lt;/dt&gt; &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt; &lt;dt&gt;Markdown in HTML&lt;/dt&gt; &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;&lt;/dl&gt;&lt;table&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;Tables&lt;/th&gt; &lt;th&gt;Are&lt;/th&gt; &lt;th&gt;Cool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Zebra&lt;/th&gt; &lt;td&gt;Stripes&lt;/td&gt; &lt;td&gt;Are&lt;/td&gt; &lt;td&gt;Pretty&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Here&lt;/th&gt; &lt;td&gt;Is&lt;/td&gt; &lt;td&gt;Another&lt;/td&gt; &lt;td&gt;Row&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags. Tables Are Cool Zebra Stripes Are Pretty Here Is Another Row Github-flavored Markdown supports a special table syntax, but Markdown Here does not support it yet. There’s an issue for it. ## Horizontal Rule 12345678910111213Three or more...---Hyphens***Asterisks___Underscores Three or more… Hyphens Asterisks Underscores ## Line Breaks My basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once, then hit it twice, see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend. Here are some things to try out: 1234567With only a single newline, this line andthis line will be a *single line*.But this one is separated by two newlines and so will be a *separate paragraph*.This line has two spaces at the end (hard for you to see, but trust me!). So this is a separate line in the *same paragraph*. With only a single newline, this line andthis line will be a single line. But this one is separated by two newlines and so will be a separate paragraph. This line has two spaces at the end (hard for you to see, but trust me!).So this is a separate line in the same paragraph.","categories":[],"tags":[],"author":"Luna"},{"title":"测试新主题","slug":"testingNewTheme","date":"2024-01-12T09:33:43.000Z","updated":"2024-01-14T09:53:48.339Z","comments":true,"path":"2024/01/12/testingNewTheme/","link":"","permalink":"https://lunaticreisen.github.io/2024/01/12/testingNewTheme/","excerpt":"2024年1月，我把原来的Matery主题换成了现在的Volantis 理由？有更好看的主题，想换了；学了点css，可以做到更花的东西了(虽然我懒得写)；以及原主题太乱了，我不知道是我的问题还是主题问题，反正就得换了 其他的理由就是想处理一下这个陈年垃圾堆，直到现在我还有保守三篇blog没有发，每次都因为有事情突然插进来然后就完全忘掉了(我估计也不会发几个)","text":"2024年1月，我把原来的Matery主题换成了现在的Volantis 理由？有更好看的主题，想换了；学了点css，可以做到更花的东西了(虽然我懒得写)；以及原主题太乱了，我不知道是我的问题还是主题问题，反正就得换了 其他的理由就是想处理一下这个陈年垃圾堆，直到现在我还有保守三篇blog没有发，每次都因为有事情突然插进来然后就完全忘掉了(我估计也不会发几个)","categories":[],"tags":[]},{"title":"Left4Dead2服务器指南","slug":"Left4Dead2-Server","date":"2023-06-30T18:15:42.000Z","updated":"2024-01-14T10:12:52.595Z","comments":true,"path":"2023/07/01/Left4Dead2-Server/","link":"","permalink":"https://lunaticreisen.github.io/2023/07/01/Left4Dead2-Server/","excerpt":"我无语了，国内互联网上关于L4D2开服的资料又杂又乱，我受不了了我直接自己写了。","text":"我无语了，国内互联网上关于L4D2开服的资料又杂又乱，我受不了了我直接自己写了。 1. Pre-Work 需要一个服务器 需要拥有使用搜索引擎的能力 需要安装一个能用的文本编辑器 需要一点空闲时间 在Steam上购买一个L4D2 本文以Windows Server为例,我使用的是腾讯云的2c4g的服务器，如果只是玩l4d2不需要那么高配置 且由于本教程使用的并非是steamcmd，所以需要你在Steam上购买一份正版L4D2,否则还是另请高明吧 2. 下载1. 下载Steam 由于大部分教程都是在Linux端开的服务器，所以都会叫你去用SteamCMD下载dedicated server，我在这先说下这这个steam和我们平常用的有什么区别： &lt;br/ SteamCMD: 优点：console化，纯文字，可以直接匿名下载dedicated server； 缺点：console化，全英文看着麻烦，疑似无法更改下载服务器，对于懒人来说很麻烦 Steam客户端: 优点：图形化，很方便； 缺点：可能会有渲染错误的问题，且无法匿名登录，需要购买游戏副本 且以我个人的偏见，大部分人买了个服务器都会去选择使用Windows Server，所以个人建议使用Steam客户端，而不是挺多教程里面的SteamCMD 2. 下载游戏 登录，选择库，选择游戏和软件查找Left 4 Dead 2 Dedicated Server；或直接在库里搜索Left 4 Dead 2 Dedicated Server，安装即可。安装完后记得在开着Steam的情况下开一次游戏 或者运行steam://run/222860 因为一些原因，在2213版本后，如果你是和别的教程一样在steamcmd里面下完服务器后直接开服，连服务器时可能会出现C类的错误。解决办法是复制你steam里面的“steamclient.dll”、“ Steam.dll”、“steamclient64.dll”这几个dll到steamcmd目录里面就好了 3. 配置插件 如果你是打算纯原版随便玩玩可以不弄，但是我个人推荐还是弄一弄基础插件，主要是方便 1. 下载插件 我这边推荐用望月插件 一方面是用久了习惯了，另一方面是干净、没什么多余的莫名其妙的插件；缺点是sourcemod、metamod和l4dtoolz这些插件平台比较老，但是不影响使用(2023-07-09) 然后就是去下载Tickrate Enabler l4d原版是30tick且不支持调整tickrate，需要下载额外的插件去解锁tickrate (要是没法在github下载，直接随便找一个批站up下面翻一翻直接拿来用也行，就是版本可能会有点老) 2. 获取你或管理员的steamID 方法1： 打开SteamID.IO输入你的steam个人资料连接，然后找到那行叫SteamID的steamID，格式为STEAM_X:X:XXXXXXXX 方式2： 开游戏，进地图后控制台输入status回车，你名字后面那一串STEAM_X:X:XXXXXXXX就是需要的SteamID 例： 1234567891011121314151617181920212223hostname: 你的名字version : 2.2.2.7 8934 insecure udp/ip : 你的IP [ public n/a ]os : Windows Listenmap : 你开的地图 at ( 2153, 6396, 2982 )players : 1 humans, 0 bots (4 max) (not hibernating) (unreserved)#userid name uniqueid connected ping loss state rate adr#2 1 \"你的名字\" **STEAM_X:0:XXXXXXXX** 00:25 34 0 active 30000 loopback#3 \"Ellis\" BOT active#4 \"Nick\" BOT active#5 \"Rochelle\" BOT active#end 3. 安装插件 插件整合解压丢到left4dead2.exe同一目录即可 Tickrate Enabler得丢到~\\left4dead2\\addons\\目录下，也就是和mod文件夹根目录 最后打开JSGME.exe,启用插件平台20XX-XX-XX即可，如果你愿意的话，可以看看望夜大佬的说明 4. 配置cfg1. 配置服务器管理员 在~\\left4dead2\\addons\\sourcemod\\configs目录下，打开admins_simple.ini “!127.0.0.1” “99:z” //本地主机 在这一行的下面输入你的steamid,格式为: “STEAM_X:X:XXXXXXXX“ “99:z” //这是备注 这一步是设置你服务器的管理员,详情请看插件平台配套的readme和examples 2. 配置server.cfg 这个是重点中的重点，在我翻看vdc和各种乱七八糟的爬虫网站后，总结出其实不需要那么多花里胡哨的指令，就这么点就能开开。网上很多都是一眼不带脑子复制黏贴的cfg，有很多冗杂且没有必要的的指令。 在~\\left4dead2\\cfg\\目录下，创建新的文本，名字是server.cfg(当然你改成别的也不是不行，只是这样方便) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960//服务器名字hostname \"服务器名字\" //最大玩家数l4d_maxplayers 8sv_maxplayers 8sv_visiblemaxplayers 8sv_removehumanlimit 1//不准野人进入sv_force_unreserved 1//motdmotd_enable 1//游戏模式和游戏难度sm_cvar sv_gametypes \"coop\"z_difficulty \"Hard\"//不准大厅进入sv_allow_lobby_connect_only \"0\"//群组设定sv_steamgroup \"你的群组ID\"//仅限群组进入,默认关闭sv_steamgroup_exclusive 0 //MOD防冲sv_consistency 0//隐藏服务器sv_tags \"hidden\"sm_cvar sb_all_bot_game 1//以下是tickrate enabler的cfg设置,我这边设置的是128tick,没有安装的可以不加sv_maxupdaterate 128sv_maxcmdrate 128fps_max 200 // higher than 100 recommended, as ticks calculated seems to dip otherwise. sv_maxrate 0 // 0 = unlimited, but you can also set this manually. Default is 30k for 30tick, use math. // Setting higher sv_minrate can be used to force users to use higher data rates. 5. 开服 事实上，我不推荐用那些开服工具的去开，我不想把事情搞复杂，除非你真的需要开多个基于起源的游戏的服务器；对于一般人来说，按本教程以下步骤照做即可 1. 配置bat运行脚本 在left4dead2.exe同一个层级下，右键新建文本，名字随便起但是后缀必须是bat或者是cmd,然后复制下面的命令到文本里面 srcds.exe -console -game left4dead2 -ip 你服务器的内网IP地址 +port 27015 +exec server.cfg +map c2m1_highway -tickrate 128 其中，map可以改成你喜欢的地图,server.cfg改成你上面设定的名字,tickrate得写的和你的server.cfg里面sv_maxupdaterate是一样的，否则不生效 弄好之后就可以直接开开了 Extra. 花里胡哨的东西 服务器内的banner和宣传页，也就是你进入服务器后默认弹得那个窗口，或按下H出来的界面,是可以被配置的:分别是头顶的host.txt和下面的motd.txt 官方服务器 我的服务器(我只适配了1080p,但是我去年换了2k屏) 1. Host.txt host.txt文件在~/left4dead2/目录下，和一堆*.vpk文件同一根目录。但游戏仅支持http下的图片链接，且目前大部分图床已经不支持http协议了，我们该怎么办？ 答案是：老逼灯qq空间！ 打开网页版qq空间，选择一个相册上传图片，然后右键他，选择复制图像链接，直接黏贴到你的host.txt里面 (没有文件后缀是正常现象) 2. Motd.txt Motd.txt文件也在~/left4dead2/目录下，和上面的host.txt文件在同一目录。和上面一样，只能解析http，所以也只能使用网页版qq空间丢图 或者 自己写一段html，可以使用图床的图。但是我不建议没有html基础的人使用，主要还是太麻烦了,但我会在下面放一些参考资料，供你使用 https://tieba.baidu.com/p/6215451078 https://tieba.baidu.com/p/8114827446","categories":[{"name":"Game","slug":"Game","permalink":"https://lunaticreisen.github.io/categories/Game/"},{"name":"Left4Dead","slug":"Game/Left4Dead","permalink":"https://lunaticreisen.github.io/categories/Game/Left4Dead/"}],"tags":[{"name":"Left4Dead","slug":"Left4Dead","permalink":"https://lunaticreisen.github.io/tags/Left4Dead/"}],"author":"Luna"},{"title":"大和赤骥LowPoly Showcase","slug":"大和赤骥LowPoly","date":"2023-04-24T15:10:44.000Z","updated":"2024-01-14T10:13:22.299Z","comments":true,"path":"2023/04/24/大和赤骥LowPoly/","link":"","permalink":"https://lunaticreisen.github.io/2023/04/24/%E5%A4%A7%E5%92%8C%E8%B5%A4%E9%AA%A5LowPoly/","excerpt":"","text":"挺早之前就做了，但是忘记丢到blog上了。 265三角形和256*256的材质，做着挺有意思，有old school的味道 more detail: sketchfab : https://skfb.ly/oBvJP twitter : https://twitter.com/514onkoishi/status/1597998100098224128?s=20 要闲得无聊可以v我50: https://lunarsshop.booth.pm/items/4394859","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"Umamusume","slug":"Umamusume","permalink":"https://lunaticreisen.github.io/tags/Umamusume/"}],"author":"Luna"},{"title":"Moto 360 Model Showcase","slug":"Moto-360","date":"2023-04-24T13:05:01.000Z","updated":"2024-01-14T10:12:34.838Z","comments":true,"path":"2023/04/24/Moto-360/","link":"","permalink":"https://lunaticreisen.github.io/2023/04/24/Moto-360/","excerpt":"","text":"没啥想说的，反正就是做了，想起来丢个blog sketchfab链接:https://skfb.ly/oGztH","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"}],"author":"Luna"},{"title":"魂系列游戏模型导出和在Blender的预处理","slug":"DS3Export","date":"2022-10-17T13:57:16.000Z","updated":"2024-01-14T10:13:11.001Z","comments":true,"path":"2022/10/17/DS3Export/","link":"","permalink":"https://lunaticreisen.github.io/2022/10/17/DS3Export/","excerpt":"贴吧里面发的提取模型教程帖子太过老旧(17年的),只能用3dsMax 2011/2012，在我琢磨了一番后，算是是弄明白现在怎么提取模型文件了 理论上，法环和魂3的引擎是一样的，大部分工具应该能通用，虽然我没试过 （所以为啥3-4月份时候的法环没人做这种文章啊？我真的挺纳闷的）","text":"贴吧里面发的提取模型教程帖子太过老旧(17年的),只能用3dsMax 2011/2012，在我琢磨了一番后，算是是弄明白现在怎么提取模型文件了 理论上，法环和魂3的引擎是一样的，大部分工具应该能通用，虽然我没试过 （所以为啥3-4月份时候的法环没人做这种文章啊？我真的挺纳闷的） 1. Pre-Work 你要解包的魂游戏本体 Cheat Engine和对应游戏的ct表 Cheat Engine : https://cheatengine.org/ 魂3中文ct表 ： https://bbs.3dmgame.com/thread-5253197-1-1.html 下载下面的解包工具 UXM : https://www.nexusmods.com/sekiro/mods/26 Yabber : https://www.nexusmods.com/sekiro/mods/42 FLVER_Editor : https://github.com/asasasasasbc/FLVER_Editor uxm用来解包游戏内的Data包，Yabber用来解包Data里的文件(比如.DCX)，FLVER_Editor则是用于打开flver文件并导出 Blender 一个能读取dds文件的图像编辑工具 这里我使用Photoshop+插件(读取dds插件以及安装教程 : http://gametechdev.github.io/Intel-Texture-Works-Plugin/) 记得备份存档和断网 耐心 2. Unpack 打开uxm 点击 Browse 选择游戏.exe 或 把游戏.exe的目录复制到Executable Path里（如上图) 点击 Unpack 耐心等待 进度条读完并显示Unpacking complete就是解包完成 解包的文件夹含义(如图) 解包出来的文件的含义(如图) 4. 获取装备源文件并解包 打开游戏 记得备份存档和断网 打开ct表 如果弹出下图这个弹窗，选择Always ask并点击Yes即可 打开ENABLED SCRIPT，然后打开高级编辑 查找装备id并找到文件 武器: 打开 修改武器属性 然后打开 武器ID捕获器（#1 在ID表里选择任意一件武器并获得ID） 然后搜索物品 把前四位数字复制出来在前面解包的文件夹里面搜索4.1 某些武器如黑暗剑他是只有七位数字，所以需要在前面加个0 然后把搜索出来的文件黏贴出来 装备: 打开 修改护甲属性 在游戏内穿好你要提取的装备(没有就刷出来(记得备份后再刷)) 打开 护甲ID捕获器 如图所示，把前四位数字复制出来在前面解包的文件夹里面搜索4.1 某些装备可能和黑暗剑一样只有七位数字，记得在前面加个0 然后把搜索出来的文件黏贴出来 把搜索出来的文件拉到Yabber.exe上(如图) 然后在同一个目录下能看到多出来一个文件夹，打开它，直到找到.flver文件和.tpf文件 把.tpf文件拉到Yabber.exe上，稍后再处理 文件最后一个字母代表他是什么贴图，a为基础贴图，n为normal map法线贴图，r可能是roughness粗糙度贴图 把.flver文件拉到FLVER_Editor.exe上，然后点击Export DAE，导出到你想导出的位置 5. 预处理 打开ps，把dds文件拉到ps上，然后有个提示框记得点上勾后点确定 预处理贴图 图层只需要最下面的Mip0的图层，其余可以删掉 法线贴图反转绿色通道 6. 导入blender blender导入选择dae,勾上导入单位 为模型的材质导入贴图 法线贴图节点连成图片这样(不需要rgb曲线一步,因为我没转换绿色通道) 完成 使用资料https://tieba.baidu.com/p/4931338707https://www.bilibili.com/video/BV1Li4y187TL/https://zhuanlan.zhihu.com/p/42668577","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"},{"name":"Dark Souls","slug":"Blender/Dark-Souls","permalink":"https://lunaticreisen.github.io/categories/Blender/Dark-Souls/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"Dark Souls","slug":"Dark-Souls","permalink":"https://lunaticreisen.github.io/tags/Dark-Souls/"}],"author":"Luna"},{"title":"CoffeeMachine Model Showcase","slug":"CoffeeMachine","date":"2022-05-24T13:15:18.000Z","updated":"2024-01-14T10:13:34.642Z","comments":true,"path":"2022/05/24/CoffeeMachine/","link":"","permalink":"https://lunaticreisen.github.io/2022/05/24/CoffeeMachine/","excerpt":"","text":"依旧是无意中看到的教程，看着简单还好做然后就做了做，结果因为要考驾照弄科目三什么的就没啥时间好好弄了，留到最近才把这东西捡起来做完。 第一次好好做这种硬表面的练习，还是有很多问题的，分享出来给大家用作学习。 Additional Notes教程youtube链接: https://www.youtube.com/watch?v=8LmYDEpNXMQ DownloadGithub-Page Download Sketchfab Download BlendSwap Download Video Download 还是那句话，我懒得上传别的网站，因为我根本就不整理我的文件🙏。","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"HardSurafce","slug":"HardSurafce","permalink":"https://lunaticreisen.github.io/tags/HardSurafce/"}],"author":"Luna"},{"title":"Earth Animation Showcase","slug":"Earth","date":"2022-05-05T13:43:17.000Z","updated":"2024-01-14T10:12:42.554Z","comments":true,"path":"2022/05/05/Earth/","link":"","permalink":"https://lunaticreisen.github.io/2022/05/05/Earth/","excerpt":"","text":"前言&amp;预览 看了一眼教程直接弄的小模型，但是感觉少点什么，就手操了一个小动画 做模型花费不到十分钟，k曲线花费两小时(因为我确实不怎么做动画)，渲染3分钟(EEVEE) 下载github-page download 既然github-page能直接下，还不需要支付流量费用，我就懒得上传别的网站了(这种东西上传别的网站其实挺丢人的) 结语没啥结语，倒是反馈请邮箱或者twitter，我现在这个主题弄留言还挺麻烦的，就懒得搞了","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"}],"author":"Luna"},{"title":"Minecraft Rig Model","slug":"MinecraftRig","date":"2021-08-23T14:07:22.000Z","updated":"2024-01-14T10:12:50.959Z","comments":true,"path":"2021/08/23/MinecraftRig/","link":"","permalink":"https://lunaticreisen.github.io/2021/08/23/MinecraftRig/","excerpt":"","text":"序言摸了许久，多少学了点名堂。正好那会还在玩mc所以就顺手做了一个玩玩（还能练练手）,并且不知道为什么，貌似没看到过几个做双层皮肤的RIG,那正好我给做出来看看效果。 UV画的超烂勿喷🥵因为双层皮肤穿模是很正常的 其实这个模型已经完成很久了但是一直没找到机会发布出来其实就是忘了 ![Cycle渲染图/Alex正在注视你…]（./imgs/mcr/top.png) 说明大概是使用说明书？我建议还是上手摸摸看看 下载详细请下载模型查看，欢迎提出批评和建议 github-page download test BlenderSwap SketchFab","categories":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"}],"tags":[{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"rig","slug":"rig","permalink":"https://lunaticreisen.github.io/tags/rig/"},{"name":"minecraft","slug":"minecraft","permalink":"https://lunaticreisen.github.io/tags/minecraft/"}],"author":"Luna"},{"title":"关于这个Blog","slug":"About-this-blog","date":"2021-07-15T07:59:56.000Z","updated":"2024-01-14T10:13:46.896Z","comments":true,"path":"2021/07/15/About-this-blog/","link":"","permalink":"https://lunaticreisen.github.io/2021/07/15/About-this-blog/","excerpt":"","text":"事实上我并没有忘记这个blog,单纯只是我也没什么要写的不过这个blog会发布一些我以后捡到的洋垃圾以及一些杂七杂八的关于挨踢方面的研究（当作记录 其实就是摸了","categories":[],"tags":[],"author":"Luna"},{"title":"Hello,Blog","slug":"firstBlog","date":"2021-07-06T09:35:51.000Z","updated":"2024-01-14T10:12:47.052Z","comments":true,"path":"2021/07/06/firstBlog/","link":"","permalink":"https://lunaticreisen.github.io/2021/07/06/firstBlog/","excerpt":"欢迎来到我的Blog，由于我并不熟悉git和hexo,所以目前还在研究并测试中 我使用的文本编辑器是Visual Studio Code，网页使用的主题来自闪烁之狐的matery 目前（2021/07/06）网页使用的banner和img的pid是79779213,网页Logo和favicon都是我自己画的 有一说一给自己打链接好怪啊 这是我的联系方式Twitter: Twitter.comEmail: LunaticReisen@outlook.com (如果看不到这个图片的话单纯因为github.io被dns污染了)(事实上能进来本站应该都能看到) 网页上的一切文字及PicS并不代表我的任何观点，一切只是为了测试 实际上我确实很摸","text":"欢迎来到我的Blog，由于我并不熟悉git和hexo,所以目前还在研究并测试中 我使用的文本编辑器是Visual Studio Code，网页使用的主题来自闪烁之狐的matery 目前（2021/07/06）网页使用的banner和img的pid是79779213,网页Logo和favicon都是我自己画的 有一说一给自己打链接好怪啊 这是我的联系方式Twitter: Twitter.comEmail: LunaticReisen@outlook.com (如果看不到这个图片的话单纯因为github.io被dns污染了)(事实上能进来本站应该都能看到) 网页上的一切文字及PicS并不代表我的任何观点，一切只是为了测试 实际上我确实很摸","categories":[],"tags":[],"author":"Luna"}],"categories":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/categories/Godot/"},{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/categories/Blender/"},{"name":"Guns","slug":"Blender/Guns","permalink":"https://lunaticreisen.github.io/categories/Blender/Guns/"},{"name":"Umamusume","slug":"Blender/Umamusume","permalink":"https://lunaticreisen.github.io/categories/Blender/Umamusume/"},{"name":"Game","slug":"Game","permalink":"https://lunaticreisen.github.io/categories/Game/"},{"name":"Left4Dead","slug":"Game/Left4Dead","permalink":"https://lunaticreisen.github.io/categories/Game/Left4Dead/"},{"name":"Dark Souls","slug":"Blender/Dark-Souls","permalink":"https://lunaticreisen.github.io/categories/Blender/Dark-Souls/"}],"tags":[{"name":"Godot","slug":"Godot","permalink":"https://lunaticreisen.github.io/tags/Godot/"},{"name":"dev","slug":"dev","permalink":"https://lunaticreisen.github.io/tags/dev/"},{"name":"Blender","slug":"Blender","permalink":"https://lunaticreisen.github.io/tags/Blender/"},{"name":"Guns","slug":"Guns","permalink":"https://lunaticreisen.github.io/tags/Guns/"},{"name":"source","slug":"source","permalink":"https://lunaticreisen.github.io/tags/source/"},{"name":"Left4Dead","slug":"Left4Dead","permalink":"https://lunaticreisen.github.io/tags/Left4Dead/"},{"name":"Umamusume","slug":"Umamusume","permalink":"https://lunaticreisen.github.io/tags/Umamusume/"},{"name":"Dark Souls","slug":"Dark-Souls","permalink":"https://lunaticreisen.github.io/tags/Dark-Souls/"},{"name":"HardSurafce","slug":"HardSurafce","permalink":"https://lunaticreisen.github.io/tags/HardSurafce/"},{"name":"rig","slug":"rig","permalink":"https://lunaticreisen.github.io/tags/rig/"},{"name":"minecraft","slug":"minecraft","permalink":"https://lunaticreisen.github.io/tags/minecraft/"}]}